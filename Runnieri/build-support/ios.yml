name: iOS CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Select Xcode
      run: sudo xcode-select -switch /Applications/Xcode.app
      
    - name: Install Dependencies
      run: |
        brew install swiftlint
        brew install swift-doc
        
    - name: Build
      run: |
        xcodebuild clean build -scheme Runnieri -destination 'platform=iOS Simulator,name=iPhone 14 Pro,OS=16.0' | xcpretty
        
    - name: Run Tests
      run: |
        xcodebuild test -scheme Runnieri -destination 'platform=iOS Simulator,name=iPhone 14 Pro,OS=16.0' | xcpretty
        
    - name: Run SwiftLint
      run: |
        swiftlint lint --config Runnieri/build-support/.swiftlint.yml --reporter github-actions-logging
        
    - name: Generate Documentation
      run: |
        swift-doc generate ./Runnieri --output ./Documentation
        
    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          ~/Library/Developer/Xcode/DerivedData/**/Logs/Test
          
    - name: Upload Documentation
      uses: actions/upload-artifact@v3
      with:
        name: documentation
        path: ./Documentation

  code-quality:
    name: Code Quality
    runs-on: macos-latest
    needs: build-and-test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run SwiftLint
      run: |
        brew install swiftlint
        swiftlint lint --config Runnieri/build-support/.swiftlint.yml --reporter github-actions-logging
        
    - name: Check Code Coverage
      run: |
        xcodebuild test -scheme Runnieri -destination 'platform=iOS Simulator,name=iPhone 14 Pro,OS=16.0' -enableCodeCoverage YES | xcpretty
        
    - name: Upload Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: |
          ~/Library/Developer/Xcode/DerivedData/**/Logs/Test/*.xcresult

  release:
    name: Release
    needs: [build-and-test, code-quality]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          Documentation/**/*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 